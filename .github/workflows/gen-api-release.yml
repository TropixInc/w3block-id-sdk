name: Gen API and Create Release

on:
  workflow_dispatch:
# TODO handle staging and production envs
    inputs:
      target_branch:
        description: 'Target environment'
        required: false
        default: 'main'

jobs:
  gen-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.7
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Initialize git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
      - name: Install dependencies
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_GITHUB_TOKEN }}

      - name: Pull API swagger.json
        run: npm run api:pull
        env:
          SWAGGER_JSON_PATH: ${{ secrets.SWAGGER_JSON_PATH }}

      - name: Generate API from swagger
        run: npm run api:gen
        env:
          SWAGGER_JSON_PATH: ${{ secrets.SWAGGER_JSON_PATH }}

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: 'feat(api): swagger new version generated'
          add: "src/id/api"

      - name: Create Release
        if: "${{ github.event.inputs.target_branch == 'main' }}"
        run: npm run release

      - name: Create Pre Release
        if: "${{ github.event.inputs.target_branch != 'main' }}"
        run: npm run release -- --prerelease

      - name: Get package version
        uses: bbonkr/get-version-action@v1.0.4
        id: get_version
        with:
          project: "./package.json"

      - name: Pushing version ${{ steps.get_version.outputs.version }} on ${{ github.event.inputs.target_branch }} with tags
        run: git push && git push --tags

      - name: GIT Log
        run: git log -n 2

      - name: GIT Status
        run: git status

  release:
    if: ${{ success() }}
    needs: gen-api
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Git pull with tags
        run: git pull --tags

      - name: Set tag var
        id: vars
        run: echo ::set-output name=tag::$(git describe --abbrev=0 --tags)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: ${{ steps.vars.outputs.tag }}
          draft: false
          prerelease: false

  publish:
    if: ${{ success() }}
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Git pull with tags
        run: git pull --tags

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.7
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install modules
        run: npm install

      - name: Build
        run: npm run build

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          scope: '@w3block'
