name: Release Version

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Target branch of push tags'
        required: false
        default: 'main'

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.7
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Initialize git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
      - name: Install dependencies
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_GITHUB_TOKEN }}

      - name: Create Release
        if: "${{ github.event.inputs.target_branch == 'main' }}"
        run: npm run release

      - name: Create Pre Release
        if: "${{ github.event.inputs.target_branch != 'main' }}"
        run: npm run release -- --prerelease

      - name: Get package version
        uses: bbonkr/get-version-action@v1.0.4
        id: get_version
        with:
          project: "./package.json"

      - name: Pushing version ${{ steps.get_version.outputs.version }} on ${GITHUB_REF##*/} with tags
        run: git push --follow-tags origin ${GITHUB_REF##*/}
